---
apiVersion: v1
data:
  password: VHhWZVE0bk44MlNTaVlIb3N3cU9VUlp2UURhTDRLcE5FbHNDRUVlOWJ3RHhNZDczS2NrSWVYelM1Y1U2TGlDMg==
  username: YXBw
kind: Secret
metadata:
  name: cluster-example-app-user
type: kubernetes.io/basic-auth

---
# yaml-language-server: $schema=https://kubernetes-schemas.trux.dev/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: default
  annotations:
    kyverno.io/ignore: 'true'
spec:
  instances: 1

  imageName: ghcr.io/cloudnative-pg/postgresql:15.1
#  bootstrap:
#    initdb:
#      database: app
#      owner: app
#      secret:
#        name: cluster-example-app-user

  postgresql:
    parameters:
      max_worker_processes: "60"
    pg_hba:
      # To access through TCP/IP you will need to get username
      # and password from the secret cluster-example-custom-app
      - host all all all scram-sha-256
#    pg_hba:
  #      - host all all 10.244.0.0/16 md5
  primaryUpdateStrategy: unsupervised

  storage:
    size: 20Gi
    storageClass: local-path

  superuserSecret:
    name: cloudnative-pg-secret

  monitoring:
    enablePodMonitor: false

  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: gzip
      destinationPath: s3://postgresql/v15/v1
      endpointURL: "https://nas.${SECRET_DOMAIN}:9009/"
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  externalClusters: []
#---
#apiVersion: postgresql.cnpg.io/v1
#kind: Cluster
#metadata:
#  name: postgres-v15
#  namespace: default
##  annotations:
##    kyverno.io/ignore: "true"
#spec:
#  instances: 1
#  imageName: ghcr.io/cloudnative-pg/postgresql:15.2
#  primaryUpdateStrategy: unsupervised
##  storage:
##    size: 20Gi
##    storageClass: ceph-block
#  storage:
#    size: 20Gi
#    storageClass: local-path
#
#  superuserSecret:
#    name: cloudnative-pg-secret
##  bootstrap:
##    recovery:
##      source: &previous-cluster postgres-v2
#  postgresql:
#    parameters:
#      max_connections: "300"
#      shared_buffers: 512MB
#  monitoring:
#    enablePodMonitor: true
#  backup:
#    retentionPolicy: 30d
#    barmanObjectStore:
#      wal:
#        compression: bzip2
#        maxParallel: 8
#      destinationPath: s3://postgresql/
#      endpointURL: "https://nas.${SECRET_DOMAIN}:9009"
#      serverName: postgres-v3
#      s3Credentials:
#        accessKeyId:
#          name: cloudnative-pg-secret
#          key: aws-access-key-id
#        secretAccessKey:
#          name: cloudnative-pg-secret
#          key: aws-secret-access-key
#  # Note: externalClusters is needed when recovering from an existing cnpg cluster
##  externalClusters:
##    - name: *previous-cluster
##      barmanObjectStore:
##        wal:
##          compression: bzip2
##          maxParallel: 8
##        destinationPath: s3://postgresql/
##        endpointURL: "https://nas.${SECRET_DOMAIN}:9009"
##        s3Credentials:
##          accessKeyId:
##            name: cloudnative-pg-secret
##            key: aws-access-key-id
##          secretAccessKey:
##            name: cloudnative-pg-secret
##            key: aws-secret-access-key
